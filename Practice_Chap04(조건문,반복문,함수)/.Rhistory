jobtype <- 'A'
rm(jobtype)
sum <- 0
for(i in 1:100){
sum <- sum = + i
}
cat("1~100누적값 : ", sum)
sum <- 0
for(i in 1:100){
sum <- sum + i
}
cat("1~100누적값 : ", sum)
dim(df_new_iris)
for(i in 1:num){
# 꽃잎의 길이에 따라 레이블 결정
if(iris$Petal.Length[i] <= 1.6){
mylabel[i] <- 'L'
}else if(iris$Petal.Length[i] >= 5.1){
mylabel[i] <- 'H'
}else{
mylabel[i] <- 'M'
}
}
num <- nrow(iris)
mylabel <- c()
for(i in 1:num){
# 꽃잎의 길이에 따라 레이블 결정
if(iris$Petal.Length[i] <= 1.6){
mylabel[i] <- 'L'
}else if(iris$Petal.Length[i] >= 5.1){
mylabel[i] <- 'H'
}else{
mylabel[i] <- 'M'
}
}
df_new_iris <- data.frame(iris$Petal.Length, mylabel)
dim(df_new_iris)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 1, mean())
apply(iris[,1:4], 2, sum)
mymax <- function(x, y) {
if(x > y)
max <- x
else
max <- y
return(max)
}
mymax(5, 6)
mymax(10, 5)
a <- mymax(50, 20)
b <- mymax(50, 200)
print(a + b)
mydiv(10, 5)
mydiv <- function(x, y=2) {
result <- x/y
return(result)
}
mydiv(10, 5)
mydiv(100)
myfunc <- function(x, y) {
vsum <- x + y
vmul <- x * y
return(list(vsum, vmul))
}
result <- myfunc(5,10)
class(result)
result
sum <- result[1]
sum
myfunc <- function(x, y) {
vsum <- x + y
vmul <- x * y
return(list(sum = vsum, mul = vmul))
}
result <- myfunc(5,10)
sum <- result$sum
mul <- result$mul
cat("5+10=",sum,"\n","5*10=",mul)
cat("5+10=",sum,"\n")
cat("5*10=",mul)
cat("5+10=",sum)
cat("5*10=",mul)
cat("5+10=",sum,"\n")
cat("5*10=",mul,"\n")
source("mylib.R")
c <- myadd(10, 55)
c <- myadd(10, 55)
cat("10 + 55 = ", c, "\n")
x <- c(1:100)
subset(x, x%%3=0)
subset(x, x%%3==0)
y <- subset(x, x%%3==0)
sum(y)
sum(y)
dim(y)
dim(x)
y
nrow(y)
ncol(y)
class(y)
legend(y)
length(y)
x <- c(101:200)
subset(x, x%%12==0)
for (i in 1:24) {
if(24%%i==0)
print(i)
}
mul <- 1
for (i in 1:10){
mul <- mul*i
}
mul
for(i in 1:9) {
num <- 9 * i
cat("9 * ", i, " = ", num, "\n")
}
for(i in 1:9) {
num <- 9 * i
cat("9 *", i, " = ", num, "\n")
}
source('C:/Users/Administrator/Google 드라이브/R/문제/조건문, 반복문, 함수.R', encoding = 'UTF-8', echo=TRUE)
i <- 1
while(1:9) {
num <- 8 * i
cat("8 *", i, "=", num, "\n")
i <- i + 1
}
i <- 1
while(9) {
num <- 8 * i
cat("8 *", i, "=", num, "\n")
i <- i + 1
}
i <- 1
while(i < 10) {
num <- 8 * i
cat("8 *", i, "=", num, "\n")
i <- i + 1
}
result <- ""
result <- ""
for (i in 1:100) {
if(i%%3==0)
result <- "*" + " "
result <- i +" "
}
result <- ""
for (i in 1:100) {
if(i%%3==0)
result <- cat(*, " ")
result <- cat(i, " ")
}
result <- ""
for (i in 1:100) {
if(i%%3==0)
result <- cat("*", " ")
result <- cat(i, " ")
}
result <- ""
for (i in 1:100) {
if(i%%3==0) {
result <- cat("*", " ")
next
}
result <- cat(i, " ")
}
for (i in 1:100) {
if(i%%3==0) {
result <- cat("*", " ")
next
}
result <- cat(i, " ")
}
result
for (i in 1:100) {
if(i%%3==0) {
cat("*", " ")
next
}
cat(i, " ")
}
result <- for (i in 1:100) {
if(i%%3==0) {
cat("*", " ")
next
}
cat(i, " ")
}
result
for (i in 2:1000) {
if(i%%2==0 | i%%3==0) break
cat(i, " ")
}
for (i in 2:1000) {
if(i%%2==0 | i%%3==0) next
cat(i, " ")
}
for (i in 2:1000) {
cat(2, 3)
if(i%%2==0 | i%%3==0) next
cat(i, " ")
}
cat(2, 3)
for (i in 2:1000) {
if(i%%2==0 | i%%3==0) next
cat(i, " ")
}
for (i in 2:1000) {
if(i == 2 | i == 3) cat(i, " ")
if(i%%2==0 | i%%3==0) next
cat(i, " ")
}
n <- 0
for (i in 0:40) {
i <- i + n
cat(i, " ")
n <- i
}
for (i in 0:40) {
if(i == 0) {
n1 <- i
next
}
else if(i == 1) {
n2 <- i
next
}
else {
n3 <- n1 + n2
cat(n3, " ")
n1 <- n2
n2 <- n3
}
}
for (i in 0:40) {
if(i == 0) {
n1 <- i
cat(i, " ")
next
}
else if(i == 1) {
n2 <- i
cat(i, " ")
next
}
else {
n3 <- n1 + n2
cat(n3, " ")
n1 <- n2
n2 <- n3
}
}
apply(iris, 1, sum)
apply(iris[,-5], 1, sum)
apply(iris[,-5], 2, max)
apply(mtcars, 2, sum)
apply(mtcars, 2, max)
apply(mtcars, 2, sd)
lgm <- function(x, y) {
return(x - y)
}
result <- lgm(10,8)
result
result <- lgm(10,20)
result
lgm <- function(x, y) {
if(x > y)
result <- x - y
else
result <- y - x
return(result)
}
result <- lgm(10,8)
result
result <- lgm(10,20)
result
maxmin <- function(x) {
a <- max(x)
b <- min(x)
return(list(max = a, min = b))
}
v1 <- c(7,1,2,8,9)
result <- maxmin(v1)
result$max ; result$min
result <- maxmin(iris[,1])
result$max ; result$min
weight <- c(69, 50, 55, 71, 89, 64, 59, 70, 71, 80)
which.max(weight)
which.min(weight)
which(weight >= 61 & weight <= 69)
weight.2 <- subset(weight, weight <= 60)
weight.2
which.max(iris[,"Petal.Length"])
which(iris[,"Petal.Width"] >= 0.3 & iris[,"Petal.Width"] <= 0.4)
iris[,"Petal.Width"]
x <- which.max(iris[,"Petal.Length"])
iris[x,]
x <- which(iris[,"Petal.Width"] >= 0.3 & iris[,"Petal.Width"] <= 0.4)
iris[x,]
score <- c(76,84,69,50,95,60,82,71,88,84)
for (i in 1:length(score)) {
if(score[i] == 69) {
idx <- i
break
}
print(score[i])
}
